<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gyqx.spdherp.surgery.dao.mapper.ISurgeryPkgDefListMapper">
<!-- parameterType传入参数类型     resultMap=自己定义的一个返回类型     resultType返回类型 -->
	<select id="list"  resultMap="surgeryPkgDefListMap">
		select
		pkg.id,pkg.sur_id,pkg.hos_id,pkg.goods_id,pkg.qty,pkg.should_sterilize,pkg.last_update_datetime,pkg.version,
		hg.goods_name,hg.goods_gg, hg.brand,hg.made,hg.mfrs_id,hg.unit,hg.packeage,hg.hos_mfrs_name,hg.unique_code_strategy,hg.price,
		comp.cname as mfrsName, def.cname as surName
		from surgery_pkg_def_list pkg
		left join surgery_pkg_def def on pkg.sur_id = def.id
		LEFT JOIN hos_goods_info hg on pkg.goods_id = hg.id and pkg.hos_id = hg.hos_id
		LEFT JOIN bas_company_info comp on comp.id = hg.mfrs_id
		<where>
			1 =1
			<if test="id != null and id !=''">
				and pkg.id = #{id}
			</if>
			<if test="surId != null and surId !=''">
				and pkg.sur_id = #{surId}
			</if>
			<if test="selSurIds != null and selSurIds.size()>0">
				and pkg.sur_id in
				<foreach collection="selSurIds" item="item" open="(" close=")" separator=",">
					#{item}
				</foreach>
			</if>
			<if test="hosId != null and hosId !=''">
				and pkg.hos_id = #{hosId}
			</if>

			<if test="goodsId != null and goodsId !=''">
				and pkg.goods_id = #{goodsId}
			</if>
			<if test="goodsName != null and goodsName !=''">
				<bind name="goodsName" value="'%' + goodsName + '%'" />
				and hg.goods_name like #{goodsName}
			</if>
		</where>
		order by pkg.sur_id, pkg.last_update_datetime desc
	</select>
 	<resultMap type="gyqx.spdherp.surgery.vo.SurgeryPkgDefListVo" id="surgeryPkgDefListMap">
		<id property="id" column="id"/>
		<result property="surId"  column="sur_id"/>
		<result property="surName"  column="surName"/>
		<result property="hosId"  column="hos_id"/>
		<result property="goodsId"  column="goods_id"/>
		<result property="qty"  column="qty"/>
		<result property="shouldSterilize"  column="should_sterilize"/>
		<result property="deptId"  column="deptId"/>
		<result property="canQGByDept"  column="canQGByDept"/>
		<result property="lastUpdateDatetime"  column="last_update_datetime"/>
		<result property="version"  column="version"/>
		<association property="hosGoods" javaType="gyqx.spdhdi.myGoods.vo.HosGoodsInfoVo">
			<id property="id" column="goods_id"/>
			<result property="hosId" column="hos_id"/>
			<result property="goodsName"  column="goods_name"/>
			<result property="goodsGg"  column="goods_gg"/>
			<result property="made"  column="made"/>
			<result property="mfrsId"  column="mfrs_id"/>
			<result property="unit"  column="unit"/>
			<result property="packeage"  column="packeage"/>
			<result property="hosMfrsName" column="hos_mfrs_name"/>
			<result property="uniqueCodeStrategy" column="unique_code_strategy"/>
			<result property="mfrsName" column="mfrsName"/>
		</association>
	</resultMap> 
	<select id="list4QG" resultMap="surgeryPkgDefListMap" parameterType="gyqx.spdherp.surgery.vo.SurgeryPkgDefListVo">
		select
			(select count(0) from dept_goods_info d where d.goods_id = pkg.goods_id and d.dept_id=#{deptId}) canQGByDept,
			pkg.id,pkg.sur_id,pkg.hos_id,pkg.goods_id,pkg.qty,pkg.should_sterilize,pkg.last_update_datetime,pkg.version,
			hg.goods_name,hg.goods_gg, hg.brand,hg.made,hg.mfrs_id,hg.unit,hg.packeage,hg.hos_mfrs_name,hg.unique_code_strategy,hg.price,
			comp.cname as mfrsName, def.cname as surName
			from surgery_pkg_def_list pkg
			left join surgery_pkg_def def on pkg.sur_id = def.id
			LEFT JOIN hos_goods_info hg on pkg.goods_id = hg.id and pkg.hos_id = hg.hos_id
			LEFT JOIN bas_company_info comp on comp.id = hg.mfrs_id
		<where>
		<if test="id != null and id !=''">
			and pkg.id = #{id}
		</if>
		<if test="surId != null and surId !=''">
			and pkg.sur_id = #{surId}
		</if>
		<if test="selSurIds != null and selSurIds.size()>0">
			and pkg.sur_id in
			<foreach collection="selSurIds" item="item" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="hosId != null and hosId !=''">
			and pkg.hos_id = #{hosId}
		</if>

		<if test="goodsId != null and goodsId !=''">
			and pkg.goods_id = #{goodsId}
		</if>
		<if test="goodsName != null and goodsName !=''">
			<bind name="goodsName" value="'%' + goodsName + '%'" />
			and hg.goods_name like #{goodsName}
		</if>
		</where>
	</select>
	<update id="update">
		update surgery_pkg_def_list
		<set>
			<if test='surId != null and surId !=""'>
				sur_id = #{surId},
			</if> 
			<if test='hosId != null and hosId !=""'>
				hos_id = #{hosId},
			</if> 
			<if test='goodsId != null and goodsId !=""'>
				goods_id = #{goodsId},
			</if> 
			<if test='qty != null'>  
				qty = #{qty},
			</if> 
			<if test='shouldSterilize != null'>  
				should_sterilize = #{shouldSterilize},
			</if>
			<if test="_databaseId == 'mysql'">
				last_update_datetime = sysdate(),
			</if>
			<if test="_databaseId == 'oracle'">
				last_update_datetime = sysdate,
			</if>
			version=#{version}+1,
		</set>
		<where>
			id = #{id}
			and version= #{version}
		</where>
	</update>
	
	<insert id="insert">
		insert into surgery_pkg_def_list 
		( id , sur_id , hos_id , goods_id , qty , should_sterilize , last_update_datetime , version  )
		values (#{id},#{surId},#{hosId},#{goodsId},#{qty},#{shouldSterilize},#{lastUpdateDatetime},#{version})
	</insert>

	<insert id="insertByBatch" parameterType="java.util.List" >
		insert into surgery_pkg_def_list
		( id , sur_id , hos_id , goods_id , qty , should_sterilize , last_update_datetime , version  )
		values 
		<foreach collection="list" item="item" index="index" separator=",">
		(#{item.id},#{item.surId},#{item.hosId},#{item.goodsId},#{item.qty},#{item.shouldSterilize},
			#{item.lastUpdateDatetime},
			#{item.version})
		</foreach>
	</insert>


	<delete id="delete">
		delete from surgery_pkg_def_list
		where
			id = #{id}
	</delete>

	<delete id="deleteByBatch" parameterType="java.util.List">
		delete from surgery_pkg_def_list
		where
			id in
			<foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
				#{item.id}
			</foreach>
	</delete>

	<select id="listNotImportGoods" resultMap="surgeryPkgDefListMap">
		SELECT
			hg.id as goods_id,
			hg.hos_id,
			hg.goods_name,
			hg.goods_gg,
			hg.unit,
			hg.mfrs_id,
			hg.packeage,
			comp.cname as mfrsName,
			hg.made,
			hg.brand
		FROM
		hos_goods_info hg
		left join bas_company_info comp on hg.mfrs_id = comp.id
		WHERE
			hg.hos_id = #{hosId}
			<if test="goodsName != null and goodsName !=''">
				<bind name="goodsName" value="'%' + goodsName + '%'" />
				and hg.goods_name like #{goodsName}
			</if>
			and hg.flag='1'
			AND hg.id NOT IN (
				SELECT goods_id FROM surgery_pkg_def_list pkgl WHERE hos_id= #{hosId}
			)
	</select>

	<select id="getHosGoodsInfoById" resultMap="hosGoodsVoMap"
			parameterType="gyqx.spdhdi.po.HosGoodsInfo">
		select
			mfrs.cname as mfrsName,
			prov.cname as provName,
			hg.*
		from  hos_goods_info  hg
		left join bas_company_info mfrs on hg.mfrs_id = mfrs.id
		left join bas_company_info prov on hg.prov_id = prov.id
		<where>
			hg.id = #{goodsId}
		</where>
	</select>

	<resultMap id="hosGoodsVoMap" type="gyqx.spdhdi.myGoods.vo.HosGoodsInfoVo">
		<id property="id" column="id"/>
		<result property="hosId" column="hos_id"/>
		<result property="code"  column="code"/>
		<result property="goodsName"  column="goods_name"/>
		<result property="shortPinyin"  column="short_pinyin"/>
		<result property="goodsGg"  column="goods_gg"/>
		<result property="made"  column="made"/>
		<result property="mfrsId"  column="mfrs_id"/>
		<result property="unit"  column="unit"/>
		<result property="packeage"  column="packeage"/>
		<result property="price"  column="price"/>
		<result property="masterCode"  column="master_code"/>
		<result property="mfrsCode"  column="mfrs_code"/>
		<result property="kindCode"  column="kind_code"/>
		<result property="kind68code"  column="kind_68code"/>
		<result property="erpCode"  column="erp_code"/>
		<result property="spdGoodsCode"  column="spd_goods_code"/>
		<result property="fieldCode2" column="field_code2"/>
		<result property="fieldCode3" column="field_code3"/>
		<result property="fieldCode4" column="field_code4"/>
		<result property="lbsx" column="lbsx"/>
		<result property="remark" column="remark"/>
		<result property="flag" column="flag"/>
		<result property="uid" column="uxid"/>
		<result property="fillDate" column="fill_date"/>
		<result property="lastUpdateDatetime" column="last_update_datetime"/>
		<result property="version" column="version"/>
		<result property="hosMfrsName" column="hos_mfrs_name"/>
		<result property="uniqueCodeStrategy" column="unique_code_strategy"/>
		<result property="taxRate" column="tax_rate"/>
		<result property="hitCode" column="hit_code"/>
		<result property="hitPrice" column="hit_price"/>
		<result property="hisPrice" column="his_price"/>
		<result property="mfrsName" column="mfrsName"/>
		<result property="provName" column="provName"/>
		<result property="provId" column="prov_id"/>
		<result property="charging" column="charging"/>
		<result property="goodsDesc" column="goods_desc"/>
		<result property="generalName" column="general_name"/>
		<result property="brand" column="brand"/>
		<result property="purMode" column="pur_mode"/>
		<result property="isMetering" column="is_metering"/>
		<result property="imgCount" column="img_count"/>
		<result property="goodsDescFile" column="goods_desc_file"/>
		<result property="fileName" column="file_name"/>
		<result property="miCode" column="mi_code" />
		<result property="miName" column="mi_name" />
	</resultMap>

</mapper>